Building wheels for collected packages: antlr4-python3-runtime
  DEPRECATION: Building 'antlr4-python3-runtime' using the legacy setup.py bdist_wheel mechanism, which will be removed in a future version. pip 25.3 will enforce this behaviour change. A possible replacement is to use the standardized build interface by setting the `--use-pep517` option, (possibly combined with `--no-build-isolation`), or adding a `pyproject.toml` file to the source tree of 'antlr4-python3-runtime'. Discussion can be found at https://github.com/pypa/pip/issues/6334
  Building wheel for antlr4-python3-runtime (setup.py) ... done
  Created wheel for antlr4-python3-runtime: filename=antlr4_python3_runtime-4.9.3-py3-none-any.whl size=144591 sha256=9aab823161185bd57374d6309b0b9db32bdd844d763aad455c1dd32689287d8a
  Stored in directory: /root/.cache/pip/wheels/12/93/dd/1f6a127edc45659556564c5730f6d4e300888f4bca2d4c5a88
Successfully built antlr4-python3-runtime
Installing collected packages: pytz, nvidia-cusparselt-cu12, mpmath, fastjsonschema, antlr4-python3-runtime, addict, zipp, varname, tzdata, triton, threadpoolctl, sympy, rpds-py, retrying, pyparsing, pillow, omegaconf, objprint, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufile-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, numpy, networkx, narwhals, markupsafe, lazy-loader, kiwisolver, joblib, itsdangerous, fonttools, einops, cycler, configargparse, click, blinker, attrs, werkzeug, trimesh, scipy, referencing, pyquaternion, plyfile, plotly, pandas, OpenEXR, opencv-python-headless, nvidia-cusparse-cu12, nvidia-cufft-cu12, nvidia-cudnn-cu12, kiui, jinja2, importlib-metadata, contourpy, scikit-learn, pyexr, nvidia-cusolver-cu12, matplotlib, jsonschema-specifications, flask, torch, jsonschema, dash, torchvision, nbformat, open3d
Successfully installed OpenEXR-3.4.0 addict-2.4.0 antlr4-python3-runtime-4.9.3 attrs-25.4.0 blinker-1.9.0 click-8.3.0 configargparse-1.7.1 contourpy-1.3.2 cycler-0.12.1 dash-3.2.0 einops-0.8.1 fastjsonschema-2.21.2 flask-3.1.2 fonttools-4.60.1 importlib-metadata-8.7.0 itsdangerous-2.2.0 jinja2-3.1.6 joblib-1.5.2 jsonschema-4.25.1 jsonschema-specifications-2025.9.1 kiui-0.2.18 kiwisolver-1.4.9 lazy-loader-0.4 markupsafe-3.0.3 matplotlib-3.10.6 mpmath-1.3.0 narwhals-2.7.0 nbformat-5.10.4 networkx-3.4.2 numpy-2.2.6 nvidia-cublas-cu12-12.8.4.1 nvidia-cuda-cupti-cu12-12.8.90 nvidia-cuda-nvrtc-cu12-12.8.93 nvidia-cuda-runtime-cu12-12.8.90 nvidia-cudnn-cu12-9.10.2.21 nvidia-cufft-cu12-11.3.3.83 nvidia-cufile-cu12-1.13.1.3 nvidia-curand-cu12-10.3.9.90 nvidia-cusolver-cu12-11.7.3.90 nvidia-cusparse-cu12-12.5.8.93 nvidia-cusparselt-cu12-0.7.1 nvidia-nccl-cu12-2.27.3 nvidia-nvjitlink-cu12-12.8.93 nvidia-nvtx-cu12-12.8.90 objprint-0.3.0 omegaconf-2.3.0 open3d-0.19.0 opencv-python-headless-4.12.0.88 pandas-2.3.3 pillow-11.3.0 plotly-6.3.1 plyfile-1.1.2 pyexr-0.5.0 pyparsing-3.2.5 pyquaternion-0.9.9 pytz-2025.2 referencing-0.36.2 retrying-1.4.2 rpds-py-0.27.1 scikit-learn-1.7.2 scipy-1.15.3 sympy-1.14.0 threadpoolctl-3.6.0 torch-2.8.0 torchvision-0.23.0 trimesh-4.8.3 triton-3.4.0 tzdata-2025.2 varname-0.15.0 werkzeug-3.1.3 zipp-3.23.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
(main) root@C.26502727:/workspace/gaustudio$ 







_________________________________________-


/venv/main/lib/python3.10/site-packages/torch/include/ATen/core/TensorBody.h:247:1: note: declared here
  247 |   T * data() const {
      | ^ ~~
/workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/rasterize_points.cu: In function ‘at::Tensor markVisible(at::Tensor&, at::Tensor&, at::Tensor&)’:
/workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/rasterize_points.cu:223:87: warning: ‘T* at::Tensor::data() const [with T = float]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
  223 |         CudaRasterizer::Rasterizer::markVisible(P,
      |                                                                                       ^ 
/venv/main/lib/python3.10/site-packages/torch/include/ATen/core/TensorBody.h:247:1: note: declared here
  247 |   T * data() const {
      | ^ ~~
/workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/rasterize_points.cu:223:130: warning: ‘T* at::Tensor::data() const [with T = float]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
  223 |         CudaRasterizer::Rasterizer::markVisible(P,
      |                                                                                                                                  ^ 
/venv/main/lib/python3.10/site-packages/torch/include/ATen/core/TensorBody.h:247:1: note: declared here
  247 |   T * data() const {
      | ^ ~~
/workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/rasterize_points.cu:223:173: warning: ‘T* at::Tensor::data() const [with T = float]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
  223 |         CudaRasterizer::Rasterizer::markVisible(P,
      |                                                                                                                                                                             ^ 
/venv/main/lib/python3.10/site-packages/torch/include/ATen/core/TensorBody.h:247:1: note: declared here
  247 |   T * data() const {
      | ^ ~~
/workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/rasterize_points.cu:223:212: warning: ‘T* at::Tensor::data() const [with T = bool]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
  223 |         CudaRasterizer::Rasterizer::markVisible(P,
      |                                                                                                                                                                                                                    ^ 
/venv/main/lib/python3.10/site-packages/torch/include/ATen/core/TensorBody.h:247:1: note: declared here
  247 |   T * data() const {
      | ^ ~~
g++ -pthread -B /venv/main/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /venv/main/include -fPIC -O2 -isystem /venv/main/include -shared /workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/build/temp.linux-x86_64-cpython-310/cuda_rasterizer/backward.o /workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/build/temp.linux-x86_64-cpython-310/cuda_rasterizer/forward.o /workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/build/temp.linux-x86_64-cpython-310/cuda_rasterizer/rasterizer_impl.o /workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/build/temp.linux-x86_64-cpython-310/ext.o /workspace/gaustudio/submodules/gaustudio-diff-gaussian-rasterization/build/temp.linux-x86_64-cpython-310/rasterize_points.o -L/venv/main/lib/python3.10/site-packages/torch/lib -L/usr/local/cuda/lib64 -lc10 -ltorch -ltorch_cpu -ltorch_python -lcudart -lc10_cuda -ltorch_cuda -o build/lib.linux-x86_64-cpython-310/gaustudio_diff_gaussian_rasterization/_C.cpython-310-x86_64-linux-gnu.so
running install_lib
creating /venv/main/lib/python3.10/site-packages/gaustudio_diff_gaussian_rasterization
copying build/lib.linux-x86_64-cpython-310/gaustudio_diff_gaussian_rasterization/__init__.py -> /venv/main/lib/python3.10/site-packages/gaustudio_diff_gaussian_rasterization
copying build/lib.linux-x86_64-cpython-310/gaustudio_diff_gaussian_rasterization/_C.cpython-310-x86_64-linux-gnu.so -> /venv/main/lib/python3.10/site-packages/gaustudio_diff_gaussian_rasterization
byte-compiling /venv/main/lib/python3.10/site-packages/gaustudio_diff_gaussian_rasterization/__init__.py to __init__.cpython-310.pyc
running install_egg_info
running egg_info
creating gaustudio_diff_gaussian_rasterization.egg-info
writing gaustudio_diff_gaussian_rasterization.egg-info/PKG-INFO
writing dependency_links to gaustudio_diff_gaussian_rasterization.egg-info/dependency_links.txt
writing top-level names to gaustudio_diff_gaussian_rasterization.egg-info/top_level.txt
writing manifest file 'gaustudio_diff_gaussian_rasterization.egg-info/SOURCES.txt'
reading manifest file 'gaustudio_diff_gaussian_rasterization.egg-info/SOURCES.txt'
adding license file 'LICENSE.md'
writing manifest file 'gaustudio_diff_gaussian_rasterization.egg-info/SOURCES.txt'
Copying gaustudio_diff_gaussian_rasterization.egg-info to /venv/main/lib/python3.10/site-packages/gaustudio_diff_gaussian_rasterization-0.0.0-py3.10.egg-info
running install_scripts
running develop
/venv/main/lib/python3.10/site-packages/setuptools/_distutils/cmd.py:90: DevelopDeprecationWarning: develop command is deprecated.
!!

        ********************************************************************************
        Please avoid running ``setup.py`` and ``develop``.
        Instead, use standards-based tools like pip or uv.

        By 2025-Oct-31, you need to update your project and remove deprecated calls
        or your builds will no longer be supported.

        See https://github.com/pypa/setuptools/issues/917 for details.
        ********************************************************************************

!!
  self.initialize_options()
Obtaining file:///workspace/gaustudio
  Installing build dependencies ... done
  Checking if build backend supports build_editable ... done
  Getting requirements to build editable ... done
  Preparing editable metadata (pyproject.toml) ... done
Building wheels for collected packages: gaustudio
  Building editable for gaustudio (pyproject.toml) ... done
  Created wheel for gaustudio: filename=gaustudio-0.1.0-0.editable-py3-none-any.whl size=4414 sha256=d1d83f8ac2b39e541976c9f9dfe85de23682518337cc96d92fb02718816d5229
  Stored in directory: /tmp/pip-ephem-wheel-cache-we92_nlu/wheels/53/0a/89/f5cfc4b27bf6f704c36d39d2a69bc055c3f6ff300617270c5c
Successfully built gaustudio
Installing collected packages: gaustudio
Successfully installed gaustudio-0.1.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
(main) root@C.26502727:/workspace/gaustudio$ 


-------------------------------------------------------------



On an RTX 3090 with 32 GB system RAM, GauStudio sometimes still crashes for point clouds >300k–400k points because it loads everything into GPU memory.


--

Got it — even with ~317k points, the extraction still segfaults. This confirms that GauStudio’s mesh extraction is still hitting GPU memory limits on the RTX 3090 + 32 GB RAM instance.

At this point, your options are:



